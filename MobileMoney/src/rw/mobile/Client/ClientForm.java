/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package rw.mobile.Client;

import java.io.PrintWriter;
import java.net.Socket;
import java.util.Scanner;
import javax.swing.JOptionPane;

/**
 *
 * @author SEYVIN
 */
public class ClientForm extends javax.swing.JFrame {

    /**
     * Creates new form ClientForm
     */
    public ClientForm() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        fromtf = new javax.swing.JTextField();
        totf = new javax.swing.JTextField();
        amounttf = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jButton1.setText("Transfer");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel1.setText("Transfer Money");

        jLabel2.setText("Receiver Number");

        jLabel3.setText("Amount");

        jLabel4.setText("Sender's Number");

        jPanel2.setBackground(new java.awt.Color(51, 51, 51));
        jPanel2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jPanel2MouseClicked(evt);
            }
        });

        jLabel5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/rw/mobile/Client/back.png"))); // NOI18N

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(22, Short.MAX_VALUE)
                .addComponent(jLabel5)
                .addGap(20, 20, 20))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jLabel5)
                .addContainerGap(22, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(71, 71, 71)
                        .addComponent(jLabel4)
                        .addGap(115, 115, 115)
                        .addComponent(fromtf, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(70, 70, 70)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addGap(160, 160, 160)
                                .addComponent(amounttf, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addGap(115, 115, 115)
                                .addComponent(totf, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(234, 234, 234)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(152, 152, 152)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 235, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 102, Short.MAX_VALUE)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(24, 24, 24))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(fromtf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(47, 47, 47)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(totf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addGap(47, 47, 47)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(amounttf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addGap(71, 71, 71)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(88, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    public Boolean valconditions(){
        

        String sender = fromtf.getText();
        String receiver = totf.getText();

       
        if (sender.length() == 10 && receiver.length() == 10) {
            if (!(sender.startsWith("072") || sender.startsWith("073") || sender.startsWith("078"))) {
                JOptionPane.showMessageDialog(rootPane, "Invalid sender");
                fromtf.requestFocus();
                return false;
            }
            if (!(receiver.startsWith("072") || receiver.startsWith("073") || receiver.startsWith("078"))) {
                JOptionPane.showMessageDialog(rootPane, "Invalid receiver");
                totf.requestFocus();
                return false;
            }
        } else if (sender.length() != 10) {
            JOptionPane.showMessageDialog(rootPane, "Sender phone number length should be 10");
            fromtf.requestFocus();
            return false;
        } else {
            JOptionPane.showMessageDialog(rootPane, "Receiver phone number length should be 10");
            totf.requestFocus();
            return false;
        }
       
        Double amount = Double.parseDouble(amounttf.getText());
        if (!(amount > 0 && amount < 1000000)) {
            JOptionPane.showMessageDialog(rootPane, "The amount entered should not be negative, zero, or greater than 1,000,000Frw");
            amounttf.requestFocus();
            return false;
        }
        // End of second validation
        
        //Third validation
        String subString1 = sender.substring(0, 2);
        String subString2 = receiver.substring(0, 2);
        if (!subString1.equals(subString2)) {
            JOptionPane.showMessageDialog(rootPane, "Sender and receiver should be on the same network");
            return false;
        }
        // End of third validation
        return true;
    
    }
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
       try {
            if (valconditions()) {
                valconditions();
                String toServer = fromtf.getText() + "#" + totf.getText() + "#" + amounttf.getText();
                Socket socket = new Socket("localhost", 7654);
                PrintWriter writer = new PrintWriter(socket.getOutputStream());

                writer.println(toServer);
                writer.flush();

                Scanner scanner = new Scanner(socket.getInputStream());
                String s = scanner.nextLine();
                JOptionPane.showMessageDialog(rootPane, s);

                writer.close();
                scanner.close();
                socket.close();
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
      

    }//GEN-LAST:event_jButton1ActionPerformed

    private void jPanel2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel2MouseClicked
        central c = new central();
        c.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_jPanel2MouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ClientForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ClientForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ClientForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ClientForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ClientForm().setVisible(true);
            }
        });
    }
/*
   mobile=========validation
private boolean validateInfo() {
        //[072, 073, 072]

//        char[] chars1 = sender.toCharArray();
//        char[] chars2 = receiver.toCharArray();
//        
//        String i = "" + chars1[0] + chars1[1] + chars1[2];
//        String j = "" + chars2[0] + chars2[1] + chars2[2];


        String sender = textFieldFromSender.getText();
        String receiver = textFieldToReceiver.getText();

        // First validation
        if (sender.length() == 10 && receiver.length() == 10) {
            if (!(sender.startsWith("072") || sender.startsWith("073") || sender.startsWith("078"))) {
                JOptionPane.showMessageDialog(rootPane, "Invalid sender");
                textFieldFromSender.requestFocus();
                return false;
            }
            if (!(receiver.startsWith("072") || receiver.startsWith("073") || receiver.startsWith("078"))) {
                JOptionPane.showMessageDialog(rootPane, "Invalid receiver");
                textFieldToReceiver.requestFocus();
                return false;
            }
        } else if (sender.length() != 10) {
            JOptionPane.showMessageDialog(rootPane, "Sender phone number length should be 10");
            textFieldFromSender.requestFocus();
            return false;
        } else {
            JOptionPane.showMessageDialog(rootPane, "Receiver phone number length should be 10");
            textFieldToReceiver.requestFocus();
            return false;
        }
        // End of first validation

        // Second validation
        Double amount = Double.parseDouble(textFieldAmount.getText());
        if (!(amount > 0 && amount < 1000000)) {
            JOptionPane.showMessageDialog(rootPane, "The amount entered should not be negative, zero, or greater than 1,000,000Frw");
            textFieldAmount.requestFocus();
            return false;
        }
        // End of second validation
        
        //Third validation
        String subString1 = sender.substring(0, 2);
        String subString2 = receiver.substring(0, 2);
        if (!subString1.equals(subString2)) {
            JOptionPane.showMessageDialog(rootPane, "Sender and receiver should be on the same network");
            return false;
        }
        // End of third validation
        return true;
    }
=========btn clicked=

 private void buttonTransferCashActionPerformed(java.awt.event.ActionEvent evt) {                                                   
        try {
            if (validateInfo()) {
                validateInfo();
                String toServer = textFieldFromSender.getText() + "#" + textFieldToReceiver.getText() + "#" + textFieldAmount.getText();
                Socket socket = new Socket("localhost", 9191);
                PrintWriter writer = new PrintWriter(socket.getOutputStream());

                writer.println(toServer);
                writer.flush();

                Scanner scanner = new Scanner(socket.getInputStream());
                String s = scanner.nextLine();
                JOptionPane.showMessageDialog(rootPane, s);

                writer.close();
                scanner.close();
                socket.close();
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }  


    */
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField amounttf;
    private javax.swing.JTextField fromtf;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JTextField totf;
    // End of variables declaration//GEN-END:variables
}
